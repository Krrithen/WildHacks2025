{"ast":null,"code":"function _classPrivateFieldLooseBase(receiver, privateKey) {\n  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n    throw new TypeError(\"attempted to use private field on non-instance\");\n  }\n  return receiver;\n}\nvar id = 0;\nfunction _classPrivateFieldLooseKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}\nimport { h } from 'preact';\nimport PQueue from 'p-queue';\nimport { getSafeFileId } from '@uppy/utils/lib/generateFileID';\nimport AuthView from \"./AuthView.js\";\nimport Header from \"./Header.js\";\nimport Browser from \"../Browser.js\";\nimport CloseWrapper from \"../CloseWrapper.js\";\nimport View from \"../View.js\";\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore We don't want TS to generate types for the package.json\nconst packageJson = {\n  \"version\": \"3.13.0\"\n};\nfunction formatBreadcrumbs(breadcrumbs) {\n  return breadcrumbs.slice(1).map(directory => directory.name).join('/');\n}\nfunction prependPath(path, component) {\n  if (!path) return component;\n  return `${path}/${component}`;\n}\nexport function defaultPickerIcon() {\n  return h(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    width: \"30\",\n    height: \"30\",\n    viewBox: \"0 0 30 30\"\n  }, h(\"path\", {\n    d: \"M15 30c8.284 0 15-6.716 15-15 0-8.284-6.716-15-15-15C6.716 0 0 6.716 0 15c0 8.284 6.716 15 15 15zm4.258-12.676v6.846h-8.426v-6.846H5.204l9.82-12.364 9.82 12.364H19.26z\"\n  }));\n}\nconst defaultOptions = {\n  viewType: 'list',\n  showTitles: true,\n  showFilter: true,\n  showBreadcrumbs: true,\n  loadAllFiles: false,\n  virtualList: false\n};\nvar _abortController = /*#__PURE__*/_classPrivateFieldLooseKey(\"abortController\");\nvar _withAbort = /*#__PURE__*/_classPrivateFieldLooseKey(\"withAbort\");\nvar _list = /*#__PURE__*/_classPrivateFieldLooseKey(\"list\");\nvar _listFilesAndFolders = /*#__PURE__*/_classPrivateFieldLooseKey(\"listFilesAndFolders\");\nvar _recursivelyListAllFiles = /*#__PURE__*/_classPrivateFieldLooseKey(\"recursivelyListAllFiles\");\n/**\n * Class to easily generate generic views for Provider plugins\n */\nexport default class ProviderView extends View {\n  constructor(plugin, opts) {\n    super(plugin, {\n      ...defaultOptions,\n      ...opts\n    });\n\n    // Logic\n    Object.defineProperty(this, _recursivelyListAllFiles, {\n      value: _recursivelyListAllFiles2\n    });\n    Object.defineProperty(this, _listFilesAndFolders, {\n      value: _listFilesAndFolders2\n    });\n    Object.defineProperty(this, _list, {\n      value: _list2\n    });\n    Object.defineProperty(this, _withAbort, {\n      value: _withAbort2\n    });\n    Object.defineProperty(this, _abortController, {\n      writable: true,\n      value: void 0\n    });\n    this.filterQuery = this.filterQuery.bind(this);\n    this.clearFilter = this.clearFilter.bind(this);\n    this.getFolder = this.getFolder.bind(this);\n    this.getNextFolder = this.getNextFolder.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuth = this.handleAuth.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.donePicking = this.donePicking.bind(this);\n\n    // Visual\n    this.render = this.render.bind(this);\n\n    // Set default state for the plugin\n    this.plugin.setPluginState({\n      authenticated: undefined,\n      // we don't know yet\n      files: [],\n      folders: [],\n      breadcrumbs: [],\n      filterInput: '',\n      isSearchVisible: false,\n      currentSelection: []\n    });\n    this.registerRequestClient();\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  tearDown() {\n    // Nothing.\n  }\n  /**\n   * Select a folder based on its id: fetches the folder and then updates state with its contents\n   * TODO rename to something better like selectFolder or navigateToFolder (breaking change?)\n   *\n   */\n  async getFolder(requestPath, name) {\n    this.setLoading(true);\n    try {\n      await _classPrivateFieldLooseBase(this, _withAbort)[_withAbort](async signal => {\n        this.lastCheckbox = undefined;\n        let {\n          breadcrumbs\n        } = this.plugin.getPluginState();\n        const index = breadcrumbs.findIndex(dir => requestPath === dir.requestPath);\n        if (index !== -1) {\n          // means we navigated back to a known directory (already in the stack), so cut the stack off there\n          breadcrumbs = breadcrumbs.slice(0, index + 1);\n        } else {\n          // we have navigated into a new (unknown) folder, add it to the stack\n          breadcrumbs = [...breadcrumbs, {\n            requestPath,\n            name\n          }];\n        }\n        this.nextPagePath = requestPath;\n        let files = [];\n        let folders = [];\n        do {\n          const {\n            files: newFiles,\n            folders: newFolders\n          } = await _classPrivateFieldLooseBase(this, _listFilesAndFolders)[_listFilesAndFolders]({\n            breadcrumbs,\n            signal\n          });\n          files = files.concat(newFiles);\n          folders = folders.concat(newFolders);\n          this.setLoading(this.plugin.uppy.i18n('loadedXFiles', {\n            numFiles: files.length + folders.length\n          }));\n        } while (this.opts.loadAllFiles && this.nextPagePath);\n        this.plugin.setPluginState({\n          folders,\n          files,\n          breadcrumbs,\n          filterInput: ''\n        });\n      });\n    } catch (err) {\n      // This is the first call that happens when the provider view loads, after auth, so it's probably nice to show any\n      // error occurring here to the user.\n      if ((err == null ? void 0 : err.name) === 'UserFacingApiError') {\n        this.plugin.uppy.info({\n          message: this.plugin.uppy.i18n(err.message)\n        }, 'warning', 5000);\n        return;\n      }\n      this.handleError(err);\n    } finally {\n      this.setLoading(false);\n    }\n  }\n\n  /**\n   * Fetches new folder\n   */\n  getNextFolder(folder) {\n    this.getFolder(folder.requestPath, folder.name);\n    this.lastCheckbox = undefined;\n  }\n\n  /**\n   * Removes session token on client side.\n   */\n  async logout() {\n    try {\n      await _classPrivateFieldLooseBase(this, _withAbort)[_withAbort](async signal => {\n        const res = await this.provider.logout({\n          signal\n        });\n        // res.ok is from the JSON body, not to be confused with Response.ok\n        if (res.ok) {\n          if (!res.revoked) {\n            const message = this.plugin.uppy.i18n('companionUnauthorizeHint', {\n              provider: this.plugin.title,\n              url: res.manual_revoke_url\n            });\n            this.plugin.uppy.info(message, 'info', 7000);\n          }\n          const newState = {\n            authenticated: false,\n            files: [],\n            folders: [],\n            breadcrumbs: [],\n            filterInput: ''\n          };\n          this.plugin.setPluginState(newState);\n        }\n      });\n    } catch (err) {\n      this.handleError(err);\n    }\n  }\n  filterQuery(input) {\n    this.plugin.setPluginState({\n      filterInput: input\n    });\n  }\n  clearFilter() {\n    this.plugin.setPluginState({\n      filterInput: ''\n    });\n  }\n  async handleAuth(authFormData) {\n    try {\n      await _classPrivateFieldLooseBase(this, _withAbort)[_withAbort](async signal => {\n        this.setLoading(true);\n        await this.provider.login({\n          authFormData,\n          signal\n        });\n        this.plugin.setPluginState({\n          authenticated: true\n        });\n        this.preFirstRender();\n      });\n    } catch (err) {\n      if (err.name === 'UserFacingApiError') {\n        this.plugin.uppy.info({\n          message: this.plugin.uppy.i18n(err.message)\n        }, 'warning', 5000);\n        return;\n      }\n      this.plugin.uppy.log(`login failed: ${err.message}`);\n    } finally {\n      this.setLoading(false);\n    }\n  }\n  async handleScroll(event) {\n    if (this.shouldHandleScroll(event) && this.nextPagePath) {\n      this.isHandlingScroll = true;\n      try {\n        await _classPrivateFieldLooseBase(this, _withAbort)[_withAbort](async signal => {\n          const {\n            files,\n            folders,\n            breadcrumbs\n          } = this.plugin.getPluginState();\n          const {\n            files: newFiles,\n            folders: newFolders\n          } = await _classPrivateFieldLooseBase(this, _listFilesAndFolders)[_listFilesAndFolders]({\n            breadcrumbs,\n            signal\n          });\n          const combinedFiles = files.concat(newFiles);\n          const combinedFolders = folders.concat(newFolders);\n          this.plugin.setPluginState({\n            folders: combinedFolders,\n            files: combinedFiles\n          });\n        });\n      } catch (error) {\n        this.handleError(error);\n      } finally {\n        this.isHandlingScroll = false;\n      }\n    }\n  }\n  async donePicking() {\n    this.setLoading(true);\n    try {\n      await _classPrivateFieldLooseBase(this, _withAbort)[_withAbort](async signal => {\n        const {\n          currentSelection\n        } = this.plugin.getPluginState();\n        const messages = [];\n        const newFiles = [];\n        for (const selectedItem of currentSelection) {\n          const {\n            requestPath\n          } = selectedItem;\n          const withRelDirPath = newItem => ({\n            ...newItem,\n            // calculate the file's path relative to the user's selected item's path\n            // see https://github.com/transloadit/uppy/pull/4537#issuecomment-1614236655\n            relDirPath: newItem.absDirPath.replace(selectedItem.absDirPath, '').replace(/^\\//, '')\n          });\n          if (selectedItem.isFolder) {\n            let isEmpty = true;\n            let numNewFiles = 0;\n            const queue = new PQueue({\n              concurrency: 6\n            });\n            const onFiles = files => {\n              for (const newFile of files) {\n                const tagFile = this.getTagFile(newFile);\n                const id = getSafeFileId(tagFile, this.plugin.uppy.getID());\n                // If the same folder is added again, we don't want to send\n                // X amount of duplicate file notifications, we want to say\n                // the folder was already added. This checks if all files are duplicate,\n                // if that's the case, we don't add the files.\n                if (!this.plugin.uppy.checkIfFileAlreadyExists(id)) {\n                  newFiles.push(withRelDirPath(newFile));\n                  numNewFiles++;\n                  this.setLoading(this.plugin.uppy.i18n('addedNumFiles', {\n                    numFiles: numNewFiles\n                  }));\n                }\n                isEmpty = false;\n              }\n            };\n            await _classPrivateFieldLooseBase(this, _recursivelyListAllFiles)[_recursivelyListAllFiles]({\n              requestPath,\n              absDirPath: prependPath(selectedItem.absDirPath, selectedItem.name),\n              relDirPath: selectedItem.name,\n              queue,\n              onFiles,\n              signal\n            });\n            await queue.onIdle();\n            let message;\n            if (isEmpty) {\n              message = this.plugin.uppy.i18n('emptyFolderAdded');\n            } else if (numNewFiles === 0) {\n              message = this.plugin.uppy.i18n('folderAlreadyAdded', {\n                folder: selectedItem.name\n              });\n            } else {\n              // TODO we don't really know at this point whether any files were actually added\n              // (only later after addFiles has been called) so we should probably rewrite this.\n              // Example: If all files fail to add due to restriction error, it will still say \"Added 100 files from folder\"\n              message = this.plugin.uppy.i18n('folderAdded', {\n                smart_count: numNewFiles,\n                folder: selectedItem.name\n              });\n            }\n            messages.push(message);\n          } else {\n            newFiles.push(withRelDirPath(selectedItem));\n          }\n        }\n\n        // Note: this.plugin.uppy.addFiles must be only run once we are done fetching all files,\n        // because it will cause the loading screen to disappear,\n        // and that will allow the user to start the upload, so we need to make sure we have\n        // finished all async operations before we add any file\n        // see https://github.com/transloadit/uppy/pull/4384\n        this.plugin.uppy.log('Adding files from a remote provider');\n        this.plugin.uppy.addFiles(\n        // @ts-expect-error `addFiles` expects `body` to be `File` or `Blob`,\n        // but as the todo comment in `View.ts` indicates, we strangly pass `CompanionFile` as `body`.\n        // For now it's better to ignore than to have a potential breaking change.\n        newFiles.map(file => this.getTagFile(file, this.requestClientId)));\n        this.plugin.setPluginState({\n          filterInput: ''\n        });\n        messages.forEach(message => this.plugin.uppy.info(message));\n        this.clearSelection();\n      });\n    } catch (err) {\n      this.handleError(err);\n    } finally {\n      this.setLoading(false);\n    }\n  }\n  render(state, viewOptions) {\n    var _this = this;\n    if (viewOptions === void 0) {\n      viewOptions = {};\n    }\n    const {\n      authenticated,\n      didFirstRender\n    } = this.plugin.getPluginState();\n    const {\n      i18n\n    } = this.plugin.uppy;\n    if (!didFirstRender) {\n      this.preFirstRender();\n    }\n    const targetViewOptions = {\n      ...this.opts,\n      ...viewOptions\n    };\n    const {\n      files,\n      folders,\n      filterInput,\n      loading,\n      currentSelection\n    } = this.plugin.getPluginState();\n    const {\n      isChecked,\n      recordShiftKeyPress,\n      filterItems\n    } = this;\n    const hasInput = filterInput !== '';\n    const pluginIcon = this.plugin.icon || defaultPickerIcon;\n    const headerProps = {\n      showBreadcrumbs: targetViewOptions.showBreadcrumbs,\n      getFolder: this.getFolder,\n      breadcrumbs: this.plugin.getPluginState().breadcrumbs,\n      pluginIcon,\n      title: this.plugin.title,\n      logout: this.logout,\n      username: this.username,\n      i18n\n    };\n    const browserProps = {\n      isChecked,\n      toggleCheckbox: this.toggleCheckbox.bind(this),\n      recordShiftKeyPress,\n      currentSelection,\n      files: hasInput ? filterItems(files) : files,\n      folders: hasInput ? filterItems(folders) : folders,\n      getNextFolder: this.getNextFolder,\n      getFolder: this.getFolder,\n      loadAllFiles: this.opts.loadAllFiles,\n      virtualList: this.opts.virtualList,\n      // For SearchFilterInput component\n      showSearchFilter: targetViewOptions.showFilter,\n      search: this.filterQuery,\n      clearSearch: this.clearFilter,\n      searchTerm: filterInput,\n      searchOnInput: true,\n      searchInputLabel: i18n('filter'),\n      clearSearchLabel: i18n('resetFilter'),\n      noResultsLabel: i18n('noFilesFound'),\n      logout: this.logout,\n      handleScroll: this.handleScroll,\n      done: this.donePicking,\n      cancel: this.cancelPicking,\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      headerComponent: h(Header, headerProps),\n      title: this.plugin.title,\n      viewType: targetViewOptions.viewType,\n      showTitles: targetViewOptions.showTitles,\n      showBreadcrumbs: targetViewOptions.showBreadcrumbs,\n      pluginIcon,\n      i18n: this.plugin.uppy.i18n,\n      uppyFiles: this.plugin.uppy.getFiles(),\n      validateRestrictions: function () {\n        return _this.plugin.uppy.validateRestrictions(...arguments);\n      },\n      isLoading: loading\n    };\n    if (authenticated === false) {\n      return h(CloseWrapper, {\n        onUnmount: this.clearSelection\n      }, h(AuthView, {\n        pluginName: this.plugin.title,\n        pluginIcon: pluginIcon,\n        handleAuth: this.handleAuth,\n        i18n: this.plugin.uppy.i18nArray,\n        renderForm: this.opts.renderAuthForm,\n        loading: loading\n      }));\n    }\n    return h(CloseWrapper, {\n      onUnmount: this.clearSelection\n    }, h(Browser, browserProps));\n  }\n}\nasync function _withAbort2(op) {\n  var _classPrivateFieldLoo;\n  // prevent multiple requests in parallel from causing race conditions\n  (_classPrivateFieldLoo = _classPrivateFieldLooseBase(this, _abortController)[_abortController]) == null || _classPrivateFieldLoo.abort();\n  const abortController = new AbortController();\n  _classPrivateFieldLooseBase(this, _abortController)[_abortController] = abortController;\n  const cancelRequest = () => {\n    abortController.abort();\n    this.clearSelection();\n  };\n  try {\n    // @ts-expect-error this should be typed in @uppy/dashboard.\n    // Even then I don't think we can make this work without adding dashboard\n    // as a dependency to provider-views.\n    this.plugin.uppy.on('dashboard:close-panel', cancelRequest);\n    this.plugin.uppy.on('cancel-all', cancelRequest);\n    await op(abortController.signal);\n  } finally {\n    // @ts-expect-error this should be typed in @uppy/dashboard.\n    // Even then I don't think we can make this work without adding dashboard\n    // as a dependency to provider-views.\n    this.plugin.uppy.off('dashboard:close-panel', cancelRequest);\n    this.plugin.uppy.off('cancel-all', cancelRequest);\n    _classPrivateFieldLooseBase(this, _abortController)[_abortController] = undefined;\n  }\n}\nasync function _list2(_ref) {\n  let {\n    requestPath,\n    absDirPath,\n    signal\n  } = _ref;\n  const {\n    username,\n    nextPagePath,\n    items\n  } = await this.provider.list(requestPath, {\n    signal\n  });\n  this.username = username || this.username;\n  return {\n    items: items.map(item => ({\n      ...item,\n      absDirPath\n    })),\n    nextPagePath\n  };\n}\nasync function _listFilesAndFolders2(_ref2) {\n  let {\n    breadcrumbs,\n    signal\n  } = _ref2;\n  const absDirPath = formatBreadcrumbs(breadcrumbs);\n  const {\n    items,\n    nextPagePath\n  } = await _classPrivateFieldLooseBase(this, _list)[_list]({\n    requestPath: this.nextPagePath,\n    absDirPath,\n    signal\n  });\n  this.nextPagePath = nextPagePath;\n  const files = [];\n  const folders = [];\n  items.forEach(item => {\n    if (item.isFolder) {\n      folders.push(item);\n    } else {\n      files.push(item);\n    }\n  });\n  return {\n    files,\n    folders\n  };\n}\nasync function _recursivelyListAllFiles2(_ref3) {\n  let {\n    requestPath,\n    absDirPath,\n    relDirPath,\n    queue,\n    onFiles,\n    signal\n  } = _ref3;\n  let curPath = requestPath;\n  while (curPath) {\n    const res = await _classPrivateFieldLooseBase(this, _list)[_list]({\n      requestPath: curPath,\n      absDirPath,\n      signal\n    });\n    curPath = res.nextPagePath;\n    const files = res.items.filter(item => !item.isFolder);\n    const folders = res.items.filter(item => item.isFolder);\n    onFiles(files);\n\n    // recursively queue call to self for each folder\n    const promises = folders.map(async folder => queue.add(async () => _classPrivateFieldLooseBase(this, _recursivelyListAllFiles)[_recursivelyListAllFiles]({\n      requestPath: folder.requestPath,\n      absDirPath: prependPath(absDirPath, folder.name),\n      relDirPath: prependPath(relDirPath, folder.name),\n      queue,\n      onFiles,\n      signal\n    })));\n    await Promise.all(promises); // in case we get an error\n  }\n}\nProviderView.VERSION = packageJson.version;","map":{"version":3,"names":["_classPrivateFieldLooseBase","receiver","privateKey","Object","prototype","hasOwnProperty","call","TypeError","id","_classPrivateFieldLooseKey","name","h","PQueue","getSafeFileId","AuthView","Header","Browser","CloseWrapper","View","packageJson","formatBreadcrumbs","breadcrumbs","slice","map","directory","join","prependPath","path","component","defaultPickerIcon","focusable","width","height","viewBox","d","defaultOptions","viewType","showTitles","showFilter","showBreadcrumbs","loadAllFiles","virtualList","_abortController","_withAbort","_list","_listFilesAndFolders","_recursivelyListAllFiles","ProviderView","constructor","plugin","opts","defineProperty","value","_recursivelyListAllFiles2","_listFilesAndFolders2","_list2","_withAbort2","writable","filterQuery","bind","clearFilter","getFolder","getNextFolder","logout","handleAuth","handleScroll","donePicking","render","setPluginState","authenticated","undefined","files","folders","filterInput","isSearchVisible","currentSelection","registerRequestClient","tearDown","requestPath","setLoading","signal","lastCheckbox","getPluginState","index","findIndex","dir","nextPagePath","newFiles","newFolders","concat","uppy","i18n","numFiles","length","err","info","message","handleError","folder","res","provider","ok","revoked","title","url","manual_revoke_url","newState","input","authFormData","login","preFirstRender","log","event","shouldHandleScroll","isHandlingScroll","combinedFiles","combinedFolders","error","messages","selectedItem","withRelDirPath","newItem","relDirPath","absDirPath","replace","isFolder","isEmpty","numNewFiles","queue","concurrency","onFiles","newFile","tagFile","getTagFile","getID","checkIfFileAlreadyExists","push","onIdle","smart_count","addFiles","file","requestClientId","forEach","clearSelection","state","viewOptions","_this","didFirstRender","targetViewOptions","loading","isChecked","recordShiftKeyPress","filterItems","hasInput","pluginIcon","icon","headerProps","username","browserProps","toggleCheckbox","showSearchFilter","search","clearSearch","searchTerm","searchOnInput","searchInputLabel","clearSearchLabel","noResultsLabel","done","cancel","cancelPicking","headerComponent","uppyFiles","getFiles","validateRestrictions","arguments","isLoading","onUnmount","pluginName","i18nArray","renderForm","renderAuthForm","op","_classPrivateFieldLoo","abort","abortController","AbortController","cancelRequest","on","off","_ref","items","list","item","_ref2","_ref3","curPath","filter","promises","add","Promise","all","VERSION","version"],"sources":["/Users/krithin/Desktop/WildHacks2025/frontend/node_modules/@uppy/provider-views/lib/ProviderView/ProviderView.js"],"sourcesContent":["function _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\nvar id = 0;\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\nimport { h } from 'preact';\nimport PQueue from 'p-queue';\nimport { getSafeFileId } from '@uppy/utils/lib/generateFileID';\nimport AuthView from \"./AuthView.js\";\nimport Header from \"./Header.js\";\nimport Browser from \"../Browser.js\";\nimport CloseWrapper from \"../CloseWrapper.js\";\nimport View from \"../View.js\";\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore We don't want TS to generate types for the package.json\nconst packageJson = {\n  \"version\": \"3.13.0\"\n};\nfunction formatBreadcrumbs(breadcrumbs) {\n  return breadcrumbs.slice(1).map(directory => directory.name).join('/');\n}\nfunction prependPath(path, component) {\n  if (!path) return component;\n  return `${path}/${component}`;\n}\nexport function defaultPickerIcon() {\n  return h(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    width: \"30\",\n    height: \"30\",\n    viewBox: \"0 0 30 30\"\n  }, h(\"path\", {\n    d: \"M15 30c8.284 0 15-6.716 15-15 0-8.284-6.716-15-15-15C6.716 0 0 6.716 0 15c0 8.284 6.716 15 15 15zm4.258-12.676v6.846h-8.426v-6.846H5.204l9.82-12.364 9.82 12.364H19.26z\"\n  }));\n}\nconst defaultOptions = {\n  viewType: 'list',\n  showTitles: true,\n  showFilter: true,\n  showBreadcrumbs: true,\n  loadAllFiles: false,\n  virtualList: false\n};\nvar _abortController = /*#__PURE__*/_classPrivateFieldLooseKey(\"abortController\");\nvar _withAbort = /*#__PURE__*/_classPrivateFieldLooseKey(\"withAbort\");\nvar _list = /*#__PURE__*/_classPrivateFieldLooseKey(\"list\");\nvar _listFilesAndFolders = /*#__PURE__*/_classPrivateFieldLooseKey(\"listFilesAndFolders\");\nvar _recursivelyListAllFiles = /*#__PURE__*/_classPrivateFieldLooseKey(\"recursivelyListAllFiles\");\n/**\n * Class to easily generate generic views for Provider plugins\n */\nexport default class ProviderView extends View {\n  constructor(plugin, opts) {\n    super(plugin, {\n      ...defaultOptions,\n      ...opts\n    });\n\n    // Logic\n    Object.defineProperty(this, _recursivelyListAllFiles, {\n      value: _recursivelyListAllFiles2\n    });\n    Object.defineProperty(this, _listFilesAndFolders, {\n      value: _listFilesAndFolders2\n    });\n    Object.defineProperty(this, _list, {\n      value: _list2\n    });\n    Object.defineProperty(this, _withAbort, {\n      value: _withAbort2\n    });\n    Object.defineProperty(this, _abortController, {\n      writable: true,\n      value: void 0\n    });\n    this.filterQuery = this.filterQuery.bind(this);\n    this.clearFilter = this.clearFilter.bind(this);\n    this.getFolder = this.getFolder.bind(this);\n    this.getNextFolder = this.getNextFolder.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuth = this.handleAuth.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.donePicking = this.donePicking.bind(this);\n\n    // Visual\n    this.render = this.render.bind(this);\n\n    // Set default state for the plugin\n    this.plugin.setPluginState({\n      authenticated: undefined,\n      // we don't know yet\n      files: [],\n      folders: [],\n      breadcrumbs: [],\n      filterInput: '',\n      isSearchVisible: false,\n      currentSelection: []\n    });\n    this.registerRequestClient();\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  tearDown() {\n    // Nothing.\n  }\n  /**\n   * Select a folder based on its id: fetches the folder and then updates state with its contents\n   * TODO rename to something better like selectFolder or navigateToFolder (breaking change?)\n   *\n   */\n  async getFolder(requestPath, name) {\n    this.setLoading(true);\n    try {\n      await _classPrivateFieldLooseBase(this, _withAbort)[_withAbort](async signal => {\n        this.lastCheckbox = undefined;\n        let {\n          breadcrumbs\n        } = this.plugin.getPluginState();\n        const index = breadcrumbs.findIndex(dir => requestPath === dir.requestPath);\n        if (index !== -1) {\n          // means we navigated back to a known directory (already in the stack), so cut the stack off there\n          breadcrumbs = breadcrumbs.slice(0, index + 1);\n        } else {\n          // we have navigated into a new (unknown) folder, add it to the stack\n          breadcrumbs = [...breadcrumbs, {\n            requestPath,\n            name\n          }];\n        }\n        this.nextPagePath = requestPath;\n        let files = [];\n        let folders = [];\n        do {\n          const {\n            files: newFiles,\n            folders: newFolders\n          } = await _classPrivateFieldLooseBase(this, _listFilesAndFolders)[_listFilesAndFolders]({\n            breadcrumbs,\n            signal\n          });\n          files = files.concat(newFiles);\n          folders = folders.concat(newFolders);\n          this.setLoading(this.plugin.uppy.i18n('loadedXFiles', {\n            numFiles: files.length + folders.length\n          }));\n        } while (this.opts.loadAllFiles && this.nextPagePath);\n        this.plugin.setPluginState({\n          folders,\n          files,\n          breadcrumbs,\n          filterInput: ''\n        });\n      });\n    } catch (err) {\n      // This is the first call that happens when the provider view loads, after auth, so it's probably nice to show any\n      // error occurring here to the user.\n      if ((err == null ? void 0 : err.name) === 'UserFacingApiError') {\n        this.plugin.uppy.info({\n          message: this.plugin.uppy.i18n(err.message)\n        }, 'warning', 5000);\n        return;\n      }\n      this.handleError(err);\n    } finally {\n      this.setLoading(false);\n    }\n  }\n\n  /**\n   * Fetches new folder\n   */\n  getNextFolder(folder) {\n    this.getFolder(folder.requestPath, folder.name);\n    this.lastCheckbox = undefined;\n  }\n\n  /**\n   * Removes session token on client side.\n   */\n  async logout() {\n    try {\n      await _classPrivateFieldLooseBase(this, _withAbort)[_withAbort](async signal => {\n        const res = await this.provider.logout({\n          signal\n        });\n        // res.ok is from the JSON body, not to be confused with Response.ok\n        if (res.ok) {\n          if (!res.revoked) {\n            const message = this.plugin.uppy.i18n('companionUnauthorizeHint', {\n              provider: this.plugin.title,\n              url: res.manual_revoke_url\n            });\n            this.plugin.uppy.info(message, 'info', 7000);\n          }\n          const newState = {\n            authenticated: false,\n            files: [],\n            folders: [],\n            breadcrumbs: [],\n            filterInput: ''\n          };\n          this.plugin.setPluginState(newState);\n        }\n      });\n    } catch (err) {\n      this.handleError(err);\n    }\n  }\n  filterQuery(input) {\n    this.plugin.setPluginState({\n      filterInput: input\n    });\n  }\n  clearFilter() {\n    this.plugin.setPluginState({\n      filterInput: ''\n    });\n  }\n  async handleAuth(authFormData) {\n    try {\n      await _classPrivateFieldLooseBase(this, _withAbort)[_withAbort](async signal => {\n        this.setLoading(true);\n        await this.provider.login({\n          authFormData,\n          signal\n        });\n        this.plugin.setPluginState({\n          authenticated: true\n        });\n        this.preFirstRender();\n      });\n    } catch (err) {\n      if (err.name === 'UserFacingApiError') {\n        this.plugin.uppy.info({\n          message: this.plugin.uppy.i18n(err.message)\n        }, 'warning', 5000);\n        return;\n      }\n      this.plugin.uppy.log(`login failed: ${err.message}`);\n    } finally {\n      this.setLoading(false);\n    }\n  }\n  async handleScroll(event) {\n    if (this.shouldHandleScroll(event) && this.nextPagePath) {\n      this.isHandlingScroll = true;\n      try {\n        await _classPrivateFieldLooseBase(this, _withAbort)[_withAbort](async signal => {\n          const {\n            files,\n            folders,\n            breadcrumbs\n          } = this.plugin.getPluginState();\n          const {\n            files: newFiles,\n            folders: newFolders\n          } = await _classPrivateFieldLooseBase(this, _listFilesAndFolders)[_listFilesAndFolders]({\n            breadcrumbs,\n            signal\n          });\n          const combinedFiles = files.concat(newFiles);\n          const combinedFolders = folders.concat(newFolders);\n          this.plugin.setPluginState({\n            folders: combinedFolders,\n            files: combinedFiles\n          });\n        });\n      } catch (error) {\n        this.handleError(error);\n      } finally {\n        this.isHandlingScroll = false;\n      }\n    }\n  }\n  async donePicking() {\n    this.setLoading(true);\n    try {\n      await _classPrivateFieldLooseBase(this, _withAbort)[_withAbort](async signal => {\n        const {\n          currentSelection\n        } = this.plugin.getPluginState();\n        const messages = [];\n        const newFiles = [];\n        for (const selectedItem of currentSelection) {\n          const {\n            requestPath\n          } = selectedItem;\n          const withRelDirPath = newItem => ({\n            ...newItem,\n            // calculate the file's path relative to the user's selected item's path\n            // see https://github.com/transloadit/uppy/pull/4537#issuecomment-1614236655\n            relDirPath: newItem.absDirPath.replace(selectedItem.absDirPath, '').replace(/^\\//, '')\n          });\n          if (selectedItem.isFolder) {\n            let isEmpty = true;\n            let numNewFiles = 0;\n            const queue = new PQueue({\n              concurrency: 6\n            });\n            const onFiles = files => {\n              for (const newFile of files) {\n                const tagFile = this.getTagFile(newFile);\n                const id = getSafeFileId(tagFile, this.plugin.uppy.getID());\n                // If the same folder is added again, we don't want to send\n                // X amount of duplicate file notifications, we want to say\n                // the folder was already added. This checks if all files are duplicate,\n                // if that's the case, we don't add the files.\n                if (!this.plugin.uppy.checkIfFileAlreadyExists(id)) {\n                  newFiles.push(withRelDirPath(newFile));\n                  numNewFiles++;\n                  this.setLoading(this.plugin.uppy.i18n('addedNumFiles', {\n                    numFiles: numNewFiles\n                  }));\n                }\n                isEmpty = false;\n              }\n            };\n            await _classPrivateFieldLooseBase(this, _recursivelyListAllFiles)[_recursivelyListAllFiles]({\n              requestPath,\n              absDirPath: prependPath(selectedItem.absDirPath, selectedItem.name),\n              relDirPath: selectedItem.name,\n              queue,\n              onFiles,\n              signal\n            });\n            await queue.onIdle();\n            let message;\n            if (isEmpty) {\n              message = this.plugin.uppy.i18n('emptyFolderAdded');\n            } else if (numNewFiles === 0) {\n              message = this.plugin.uppy.i18n('folderAlreadyAdded', {\n                folder: selectedItem.name\n              });\n            } else {\n              // TODO we don't really know at this point whether any files were actually added\n              // (only later after addFiles has been called) so we should probably rewrite this.\n              // Example: If all files fail to add due to restriction error, it will still say \"Added 100 files from folder\"\n              message = this.plugin.uppy.i18n('folderAdded', {\n                smart_count: numNewFiles,\n                folder: selectedItem.name\n              });\n            }\n            messages.push(message);\n          } else {\n            newFiles.push(withRelDirPath(selectedItem));\n          }\n        }\n\n        // Note: this.plugin.uppy.addFiles must be only run once we are done fetching all files,\n        // because it will cause the loading screen to disappear,\n        // and that will allow the user to start the upload, so we need to make sure we have\n        // finished all async operations before we add any file\n        // see https://github.com/transloadit/uppy/pull/4384\n        this.plugin.uppy.log('Adding files from a remote provider');\n        this.plugin.uppy.addFiles(\n        // @ts-expect-error `addFiles` expects `body` to be `File` or `Blob`,\n        // but as the todo comment in `View.ts` indicates, we strangly pass `CompanionFile` as `body`.\n        // For now it's better to ignore than to have a potential breaking change.\n        newFiles.map(file => this.getTagFile(file, this.requestClientId)));\n        this.plugin.setPluginState({\n          filterInput: ''\n        });\n        messages.forEach(message => this.plugin.uppy.info(message));\n        this.clearSelection();\n      });\n    } catch (err) {\n      this.handleError(err);\n    } finally {\n      this.setLoading(false);\n    }\n  }\n  render(state, viewOptions) {\n    var _this = this;\n    if (viewOptions === void 0) {\n      viewOptions = {};\n    }\n    const {\n      authenticated,\n      didFirstRender\n    } = this.plugin.getPluginState();\n    const {\n      i18n\n    } = this.plugin.uppy;\n    if (!didFirstRender) {\n      this.preFirstRender();\n    }\n    const targetViewOptions = {\n      ...this.opts,\n      ...viewOptions\n    };\n    const {\n      files,\n      folders,\n      filterInput,\n      loading,\n      currentSelection\n    } = this.plugin.getPluginState();\n    const {\n      isChecked,\n      recordShiftKeyPress,\n      filterItems\n    } = this;\n    const hasInput = filterInput !== '';\n    const pluginIcon = this.plugin.icon || defaultPickerIcon;\n    const headerProps = {\n      showBreadcrumbs: targetViewOptions.showBreadcrumbs,\n      getFolder: this.getFolder,\n      breadcrumbs: this.plugin.getPluginState().breadcrumbs,\n      pluginIcon,\n      title: this.plugin.title,\n      logout: this.logout,\n      username: this.username,\n      i18n\n    };\n    const browserProps = {\n      isChecked,\n      toggleCheckbox: this.toggleCheckbox.bind(this),\n      recordShiftKeyPress,\n      currentSelection,\n      files: hasInput ? filterItems(files) : files,\n      folders: hasInput ? filterItems(folders) : folders,\n      getNextFolder: this.getNextFolder,\n      getFolder: this.getFolder,\n      loadAllFiles: this.opts.loadAllFiles,\n      virtualList: this.opts.virtualList,\n      // For SearchFilterInput component\n      showSearchFilter: targetViewOptions.showFilter,\n      search: this.filterQuery,\n      clearSearch: this.clearFilter,\n      searchTerm: filterInput,\n      searchOnInput: true,\n      searchInputLabel: i18n('filter'),\n      clearSearchLabel: i18n('resetFilter'),\n      noResultsLabel: i18n('noFilesFound'),\n      logout: this.logout,\n      handleScroll: this.handleScroll,\n      done: this.donePicking,\n      cancel: this.cancelPicking,\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      headerComponent: h(Header, headerProps),\n      title: this.plugin.title,\n      viewType: targetViewOptions.viewType,\n      showTitles: targetViewOptions.showTitles,\n      showBreadcrumbs: targetViewOptions.showBreadcrumbs,\n      pluginIcon,\n      i18n: this.plugin.uppy.i18n,\n      uppyFiles: this.plugin.uppy.getFiles(),\n      validateRestrictions: function () {\n        return _this.plugin.uppy.validateRestrictions(...arguments);\n      },\n      isLoading: loading\n    };\n    if (authenticated === false) {\n      return h(CloseWrapper, {\n        onUnmount: this.clearSelection\n      }, h(AuthView, {\n        pluginName: this.plugin.title,\n        pluginIcon: pluginIcon,\n        handleAuth: this.handleAuth,\n        i18n: this.plugin.uppy.i18nArray,\n        renderForm: this.opts.renderAuthForm,\n        loading: loading\n      }));\n    }\n    return h(CloseWrapper, {\n      onUnmount: this.clearSelection\n    }, h(Browser, browserProps));\n  }\n}\nasync function _withAbort2(op) {\n  var _classPrivateFieldLoo;\n  // prevent multiple requests in parallel from causing race conditions\n  (_classPrivateFieldLoo = _classPrivateFieldLooseBase(this, _abortController)[_abortController]) == null || _classPrivateFieldLoo.abort();\n  const abortController = new AbortController();\n  _classPrivateFieldLooseBase(this, _abortController)[_abortController] = abortController;\n  const cancelRequest = () => {\n    abortController.abort();\n    this.clearSelection();\n  };\n  try {\n    // @ts-expect-error this should be typed in @uppy/dashboard.\n    // Even then I don't think we can make this work without adding dashboard\n    // as a dependency to provider-views.\n    this.plugin.uppy.on('dashboard:close-panel', cancelRequest);\n    this.plugin.uppy.on('cancel-all', cancelRequest);\n    await op(abortController.signal);\n  } finally {\n    // @ts-expect-error this should be typed in @uppy/dashboard.\n    // Even then I don't think we can make this work without adding dashboard\n    // as a dependency to provider-views.\n    this.plugin.uppy.off('dashboard:close-panel', cancelRequest);\n    this.plugin.uppy.off('cancel-all', cancelRequest);\n    _classPrivateFieldLooseBase(this, _abortController)[_abortController] = undefined;\n  }\n}\nasync function _list2(_ref) {\n  let {\n    requestPath,\n    absDirPath,\n    signal\n  } = _ref;\n  const {\n    username,\n    nextPagePath,\n    items\n  } = await this.provider.list(requestPath, {\n    signal\n  });\n  this.username = username || this.username;\n  return {\n    items: items.map(item => ({\n      ...item,\n      absDirPath\n    })),\n    nextPagePath\n  };\n}\nasync function _listFilesAndFolders2(_ref2) {\n  let {\n    breadcrumbs,\n    signal\n  } = _ref2;\n  const absDirPath = formatBreadcrumbs(breadcrumbs);\n  const {\n    items,\n    nextPagePath\n  } = await _classPrivateFieldLooseBase(this, _list)[_list]({\n    requestPath: this.nextPagePath,\n    absDirPath,\n    signal\n  });\n  this.nextPagePath = nextPagePath;\n  const files = [];\n  const folders = [];\n  items.forEach(item => {\n    if (item.isFolder) {\n      folders.push(item);\n    } else {\n      files.push(item);\n    }\n  });\n  return {\n    files,\n    folders\n  };\n}\nasync function _recursivelyListAllFiles2(_ref3) {\n  let {\n    requestPath,\n    absDirPath,\n    relDirPath,\n    queue,\n    onFiles,\n    signal\n  } = _ref3;\n  let curPath = requestPath;\n  while (curPath) {\n    const res = await _classPrivateFieldLooseBase(this, _list)[_list]({\n      requestPath: curPath,\n      absDirPath,\n      signal\n    });\n    curPath = res.nextPagePath;\n    const files = res.items.filter(item => !item.isFolder);\n    const folders = res.items.filter(item => item.isFolder);\n    onFiles(files);\n\n    // recursively queue call to self for each folder\n    const promises = folders.map(async folder => queue.add(async () => _classPrivateFieldLooseBase(this, _recursivelyListAllFiles)[_recursivelyListAllFiles]({\n      requestPath: folder.requestPath,\n      absDirPath: prependPath(absDirPath, folder.name),\n      relDirPath: prependPath(relDirPath, folder.name),\n      queue,\n      onFiles,\n      signal\n    })));\n    await Promise.all(promises); // in case we get an error\n  }\n}\nProviderView.VERSION = packageJson.version;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}